{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","defaultUserId","App","useState","choosedUserId","setChoosedUserId","todoTitle","setTodoTitle","visibleTodos","addVisibleTodo","isSubmitted","setSubmit","action","method","onSubmit","event","preventDefault","trim","reduce","maxId","Number","prevVisibleTodo","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.980d3832.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n      data-id={id}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {\n      todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))\n    }\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nconst defaultUserId = '0';\n\nexport const App: React.FC = () => {\n  const [choosedUserId, setChoosedUserId] = useState(defaultUserId);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [visibleTodos, addVisibleTodo] = useState(todos);\n  const [isSubmitted, setSubmit] = useState(false);\n\n  const handleSelectingUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setChoosedUserId(event.target.value);\n  };\n\n  const handleEnteringTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTodoTitle(event.target.value);\n  };\n\n  const handleAddTodo = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const title = todoTitle.trim();\n\n    const id = visibleTodos\n      .reduce((maxId, todo) => (maxId > todo.id ? maxId : todo.id), 0) + 1;\n    const user = getUser(Number(choosedUserId));\n    const userId = user && user.id;\n    const completed = false;\n\n    if (title === '' || choosedUserId === defaultUserId || !user || !userId) {\n      setSubmit(true);\n    } else {\n      addVisibleTodo((prevVisibleTodo) => [...prevVisibleTodo, {\n        id,\n        title,\n        userId,\n        completed,\n        user,\n      }]);\n\n      setChoosedUserId(defaultUserId);\n      setTodoTitle('');\n      setSubmit(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleAddTodo}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={todoTitle}\n              onChange={handleEnteringTitle}\n            />\n          </label>\n          {todoTitle.trim() === ''\n          && isSubmitted\n          && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              onChange={handleSelectingUser}\n              value={choosedUserId}\n            >\n\n              <option value={defaultUserId} disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option\n                  value={user.id}\n                  key={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          {choosedUserId === defaultUserId\n            && isSubmitted\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}